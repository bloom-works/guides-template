# Run when the PR is created, updated with a new commit, or re-opened after closed

name: Pull Request
on: 
  pull_request:
    branches: [ "main" ]
    types: [opened, reopened, synchronize]    

jobs:
  pr_checks:
    runs-on: ubuntu-latest
    
#     strategy:
#       matrix:
#         node-version: [18.x]    
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Build Docker container
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: ${{ github.repository }}:${{ github.head_ref }}
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#           cache: 'npm'
     
      
      # --------
      # COMMAND TEMPLATE
      # Use this to run a job within your main Dockerfile built app container
      #
      # - name: <job name>
      #   run: docker run --rm ${{ github.repository }}:${{ github.head_ref }} <terminal command>
      # --------
      
      # --------
      # COMMON PR CHECKS
      # Add/remove what you do/don't use. Common ones provided below
      # -------- 
       
      
      
      # LINTER
      - name: Run linter
        run: docker run --rm ${{ github.repository }}:${{ github.head_ref }} sh ci/linter.sh
      
      # JEST TESTS
      - name: Run tests
        run: docker run --rm ${{ github.repository }}:${{ github.head_ref }} sh ci/tests.sh
      
      # SECURITY
      - name: Run security scans
        run: docker run --rm ${{ github.repository }}:${{ github.head_ref }} sh ci/security.sh

      # CODE QUALITY
      - name: Run code quality scans
        run: docker run --rm ${{ github.repository }}:${{ github.head_ref }} sh ci/code_quality.sh
        
      # NODE TESTS   
#       - name: Node tests
#         run: docker run --rm ${{ github.repository }}:${{ github.head_ref }} npm ci
#       - run: docker run npm run serve --if-present
#       - run: docker run npm test
        
